{
	"shabang": {
		"prefix": "shabang",
		"body": [
			"#!/bin/sh"
		]
	},
	"controllo parametri lasco": {
			"prefix": "check params loose",
			"body": [
			"# Controllo che il numero di parametri rientri nella soglia desiderata",
			"if test \\$# -lt $1; then",
				"\t# In tal caso il numero dei parametri non rientra nell'intervallo desiderato, quindi interrompo l'esecuzione",
				"\techo \"Errore: numero parametri errato. Il corretto numero di parametri da passare e' almeno $1.\"",
				"\t# Esco specificando un valore intero di errore",
				"\texit 1;",
				"$0",
			"fi"]
	},
	"controllo parametri stretto": {
		"prefix": "check params strict",
		"body": [
		"# Controllo che il numero di parametri rientri nella soglia desiderata",
		"if test \\$# -ne $1; then",
			"\t# In tal caso il numero dei parametri non rientra nell'intervallo desiderato, quindi interrompo l'esecuzione",
			"\techo \"Errore: numero parametri errato. Il corretto numero di parametri da passare e' $1.\"",
			"\t# Esco specificando un valore intero di errore",
			"\texit 1;",
			"$0",
		"fi"]
	},
	"aggiornamento path": {
			"prefix": "update path",
			"body": [
			"# Aggiungo alla variabile d'ambiente PATH il path corrente",
			"PATH=`pwd`:\\$PATH",
			"# Aggiungo le modifiche effettuate alla variabile d'ambiente esportandola",
			"export PATH",
			"$0"
		]
	},
	"controllo numero intero positivo": {
		"prefix": "check int pos",
		"body": [
		"# Controllo se il parametro e' un numero intero",
		"case \\$${1:i} in",
		"*[!0-9]*)",
			"\t# In tal caso il parametro non e' un numero intero, quindi interrompo l'esecuzione",
			"\techo \"Errore: il parametro $${1:i} non e' un numero intero. Processo interrotto.\"",
			"\t# Esco specificando un valore intero di errore",
			"\texit ${2:5};;",
		"*)",
			"\techo \"DEBUG- Il parametro passato \\$${1:i} e' un numero intero.\"",
			"\t# Controllo se il numero e' positivo",
			"\tif test \"\\$${1:i}\" -le 0; then",
				"\t\techo \"Errore: il numero passato \\$${1:i} non e' positivo.\"",
				"\t\t# Esco specificando un valore intero di errore",
				"\t\texit ${3:6}",
			"\telse",
				"\t\techo \"DEBUG- Il numero \\$${1:i} e' intero e positivo.\"",
			"\tfi;;",
		"esac"
		]
	},
	"controllo stringa": {
		"prefix": "check string",
		"body": [
		"# Controllo che il parametro \\$1 sia una stringa",
		"case \\$1 in",
		"*[0-9]*)", 
			"\techo \"Il parametro \\$1 non e' una stringa. Processo interrotto.\"",
			"# Esco specificando un valore intero di errore",
			"\texit 9;;",
		"*)",
			"\techo \"Il parametro \\$1 e' una stringa.\";;",
		"esac"]
	},
	"controllo carattere": {
		"prefix": "check char",
		"body": [
			"case \\$${1:i} in",
			"?)", 
				"\techo \"DEBUG-$i e' un carattere\" ;;",
			"*)", 
				"\techo \"Errore: \\$${1:i} non e' un carattere\"",
				"\texit $2;;",
			"esac",
			"$0"
			]
	},
	"controllo path assoluto": {
		"prefix": "check abs path",
		"body": [
			"# Uso un case per verificare se il parametro e' un path assoluto",
			"case \\$${1:G} in",
			"/*)",
			    "\techo \"DEBUG- Il parametro \\$${1:G} e' un path assoluto.\"",
			    "\t# Ora verifico l'esistenza della directory e che essa sia traversabile",
			    "\tif test -d \"\\$${1:G}\" -a -x \"\\$${1:G}\"; then",
			        "\t\techo \"DEBUG- Il parametro \\$${1:G} e' una directory traversabile.\"",
			    "\telse",
			        "\t\techo \"Errore: il parametro \\$${1:G} non e' una directory traversabile.\"",
			        "\t\t# Esco specificando un valore intero di errore",
			        "\t\texit $2",
			    "\tfi;;",
			"*)",
			    "\techo \"Errore: il parametro \\$${1:G} non e' un path assoluto.\"",
			    "\t# Esco specificando un valore intero di errore",
			    "\texit $3;;",
			"esac",
			"$0"
		]
	},
	"ciclo di scorrimenti file della directory": {
		"prefix": "for file",
		"body": [
			"for ${1:F} in *; do",
			"\t#Seleziono solo i file leggibili",
			"\tif test -f \"\\$${1:F}\" -a -r \"\\$${1:F}\"; then",
    		    "\t\t$0",
    		"\tfi",
			"done"
		]
	},
	"controllo estensione del file": {
		"prefix": "file ext",
		"body": [
			"# Controllo se il file ha estensione \\$2",
    		"case \\$${1:F} in",
    		"*.$2)",
    		    "\techo \"Il file `pwd`/\\$${1:F} ha estensione $2.\"",
    		    "\techo \"`pwd`/\\$F\" >> \"\\$3\";;",
    		"*)",
    		    "\t;;",
    		"esac"
		]
	},
	"controllo directory vuota": {
		"prefix": "dir empty",
		"body": [
			"# Controllo che la directory corrente non sia vuota",
			"if test -z \"`ls -A`\"; then",
			    "\techo \"DUBUG- La directory $1 e' vuota. Directory scartata.\"",
			"fi",
			"$0"
		]
	},
	"file temporaneo": {
		"prefix": "temp file",
		"body": [
			"# Creo un file temporaneo",
			"echo \"Creo un file temporaneo.\"",
			"> ${1:/tmp/nomiAssoluti}",
			"",
			"$0",
			"",
			"# Elimino il file temporaneo",
			"echo \"Elimino il file temporaneo.\"",
			"rm ${1:/tmp/nomiAssoluti}"
		]
	},
	"multipli file temporanei": {
		"prefix": "multi-temp file",
		"body": [
			"# Dichiaro una variabile da usare come contatore",
			"n=1",
			"# Scorro la lista in un ciclo che utilizza il contatore n",
			"for G; do",
				"\t# Creo un file temporaneo per ogni gerarchia",
				"\t> /tmp/nomiAssoluti-\\$n",
				"",
			    "\t# Incremento la variabile contatore di 1 a ogni iterazione",
			    "\tn=`expr \"\\$n\" + 1`",
			"done",
			"# Reimposto il contatore al punto di partenza, ovvero a 1",
			"n=1",
			"",
			"",
			"",
			"# Elimino i file temporanei",
			"# Dichiaro un contatore",
			"n=1",
			"for G; do",
				"\t# Elimino i file temporanei per ogni gerarchia",
				"\trm /tmp/nomiAssoluti-\\$n",
				"",
			    "\t# Incremento la variabile contatore di 1 a ogni iterazione",
			    "\tn=`expr \"\\$n\" + 1`",
			"done"
		]
	},
	"input booleano": {
		"prefix": "input bool",
		"body": [
			"# Interrogo l'utente",
			"echo \"Domanda? [S/N]\"",
			"# Leggo la risposta dell'utente",
			"read -r risposta",
			"# Controllo la risposta dell'utente",
			"case \\$risposta in",
			"S*|s*|Y*|y*)",
			    "\t;;",
			"N*|n*)",
			    "\t# Non faccio nulla",
			    "\t;;",
			"*)",
			    "# Risposta non valida",
			    "echo \"Risposta non valida.\";;",
			"esac"
		]
	},
	"input numero": {
		"prefix": "input int",
		"body": [
			"# Interrogo l'utente",
			"echo \"Inserisci un numero compreso tra 1 e $N\"",
			"# Leggo la risposta dell'utente",
			"# Controllo se il parametro e' un numero intero",
			"case \\$X in",
			"*[!0-9]*)",
				"\t# In tal caso il parametro non e' un numero intero, quindi interrompo l'esecuzione",
				"\techo \"Il parametro $X non e' un numero intero. Processo interrotto.\"",
				"\t# Esco specificando un valore intero di errore",
				"\texit 9;;",
			"*)",
				"\techo \"Il parametro \\$X e' un numero intero.\"",
				"\t# Controllo se il numero e' positivo",
				"\tif test \"\\$X\" -le 0; then",
					"\t\techo \"Il numero \\$X non e' positivo.\"",
					"\t\t# Esco specificando un valore intero di errore",
					"\t\texit 10",
				"\telse",
					"\t\techo \"Il numero \\$X e' positivo.\"",
				"\tfi;;",
			"esac"
		]
	},
	"for con iteratore": {
		"prefix": "for",
		"body": [
			"# Dichiaro una variabile da usare come contatore",
			"n=1",
			"# Scorro la lista in un ciclo che utilizza il contatore n",
			"for ${1:i}; do",
			    "\t# Incremento la variabile contatore di 1 a ogni iterazione",
				"\t$0",
			    "\tn=`expr \"\\$n\" + 1`",
			"done"
		]
	},
	"shift": {
		"prefix": "shift",
		"body": [
			"# Shift per scorrere i parametri successivi piu' agevolmente",
			"shift"
		]
	},
	"estrazione linea da file": {
		"prefix": "file getLine",
		"body": [
			"# Estraggo la riga desiderata dal file e la stampo a video",
			"head -n \\$n \\$file | tail -n 1"
		]
	},
	"cd": {
		"prefix": "cd",
		"body": [
			"# Mi sposto nella directory passata come primo parametro",
			"cd \\$1"
		]
	},
	"ciclo per la ricorsione": {
		"prefix": "for recursive",
		"body": [
			"# Cerco directory da esplorare all'interno della directory corrente",
			"for D in *; do",
				"\tif test -d \"\\$D\" -a -x \"\\$D\"; then",
					"\t\t# Chiamo lo script ricorsivo entrando nella directory",
					"\t\tFCR.sh \"`pwd`/\\$D\" \"\\$2\" \"\\$3\"",
				"\tfi",
			"done"
		]
	},
	"ciclo di scorrimento delle gerarchie": {
		"prefix": "for hierarchy",
		"body": [
			"# Scorro la lista di gerarchie",
			"for ${1:G} in \\$${2:Q}; do",
			    "\t# Chiamo lo script ricorsivo",
			    "\tFCR.sh \"\\$G\" \"\\$$3\" \"${4:/tmp/nomiAssoluti}\"",
			"done"
		]
	}
}